C51 COMPILER V9.60.0.0   I2C                                                               08/15/2021 15:15:37 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE i2c.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\i2c.l
                    -st) TABS(2) OBJECT(.\Objects\i2c.obj)

line level    source

   1          #include <REGX51.H>
   2          #include<stdio.h>
   3          #include "i2c.h"
   4          #include<string.h>
   5          
   6          unsigned char bdata RTC_DATA;
   7          
   8          sbit lsb = RTC_DATA ^ 0;
   9          sbit msb = RTC_DATA ^ 7;
  10          
  11          void RTC_read_time(rtc_t *rtc_time) {
  12   1        i2c_start();
  13   1        i2c_send(DS1307_WRITE_ADDR);
  14   1        i2c_send(0x00);
  15   1        i2c_stop();
  16   1        i2c_start();
  17   1        i2c_send(DS1307_READ_ADDR);
  18   1      
  19   1        rtc_time->sec = i2c_read(1);
  20   1        rtc_time->min = i2c_read(1);
  21   1        rtc_time->hour = i2c_read(1);
  22   1        rtc_time->weekDay = i2c_read(1);
  23   1        rtc_time->date = i2c_read(1);
  24   1        rtc_time->month = i2c_read(1);
  25   1        rtc_time->year = i2c_read(0);
  26   1      
  27   1        i2c_stop();
  28   1      
  29   1      }
  30          
  31          void RTC_set_time(rtc_t *rtc_time) {
  32   1        i2c_start();
  33   1        
  34   1        i2c_send(DS1307_WRITE_ADDR);
  35   1        i2c_send(0x00);
  36   1        
  37   1        i2c_send(rtc_time->sec);
  38   1        i2c_send(rtc_time->min);
  39   1        i2c_send(rtc_time->hour);
  40   1        i2c_send(rtc_time->weekDay);
  41   1        i2c_send(rtc_time->date);
  42   1        i2c_send(rtc_time->month);
  43   1        i2c_send(rtc_time->year);
  44   1      
  45   1        i2c_stop();
  46   1      
  47   1      }
  48          void i2c_start(void) {
  49   1        SDA = 1;
  50   1        SCL = 1;
  51   1        SDA = 0;
  52   1        SCL = 0;
  53   1      }
  54          
C51 COMPILER V9.60.0.0   I2C                                                               08/15/2021 15:15:37 PAGE 2   

  55          void i2c_send(unsigned char send) {
  56   1        unsigned char i;
  57   1        RTC_DATA = send;
  58   1        for (i = 0; i <= 7; i++) {
  59   2          SDA = msb;
  60   2          SCL = 1;
  61   2          SCL = 0;
  62   2          RTC_DATA = RTC_DATA << 1;
  63   2        }
  64   1        while (SDA != 0);
  65   1        SCL = 1;
  66   1        SCL = 0;
  67   1      }
  68          
  69          unsigned char i2c_read(unsigned char ack) {
  70   1        unsigned char i;
  71   1        lsb = SDA;
  72   1        for (i = 0; i <= 7; i++) {
  73   2          RTC_DATA = RTC_DATA << 1;
  74   2          lsb = SDA;
  75   2          SCL = 1;
  76   2          SCL = 0;
  77   2        }
  78   1      
  79   1        if (ack == 1)
  80   1          i2c_Ack();
  81   1        else
  82   1          i2c_NoAck();
  83   1        return (RTC_DATA);
  84   1      }
  85          
  86          void i2c_stop(void) {
  87   1        SDA = 0;
  88   1        SCL = 1;
  89   1        SDA = 1;
  90   1        SCL = 0;
  91   1      }
  92          void i2c_Ack(void) {
  93   1        SDA = 0;        //Pull SDA low to indicate Positive ACK
  94   1        SCL = 1;
  95   1        SCL = 0;
  96   1        SDA = 1;        // Pull SDA back to High(IDLE state)
  97   1      }
  98          void i2c_NoAck(void) {
  99   1        SDA = 1;         //Pull SDA high to indicate Negative/NO ACK
 100   1        SCL = 1;
 101   1        SCL = 0;
 102   1        SCL = 1;         // Set SCL 
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    361    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
